;; CONTRACT all_instructions

;; Dont expect this contract to typecheck or run.
;; Just used to check assembler rountrip of all instruction.

FUNCTION foo () : {tuple, []}
  RETURN

  RETURNR a13

  CALL foo

  CALL_R arg125 foo

  CALL_T foo

  CALL_TR arg245 foo

  JUMP 5514251025295783441695716053282666408426

  JUMPIF arg196 0x12c651665

  SWITCH_V2 a27 63 33

  SWITCH_V3 var4 0x1d61723dd 79 7

  SWITCH_VN arg0 [1, 2, 3]

  PUSH var80

  DUPA

  DUP a

  POP a107

  STORE arg183 var225

  INCA

  INC a25

  DECA

  DEC a

  ADD a217 a a

  SUB arg35 arg165 var74

  MUL 44 35 "foo"

  DIV 263838340369912686645632650718169038811 a24 a

  MOD var113 arg80 arg207

  POW a176 a a123

  LT a 78 var81

  GT arg19 4729414120208894485838100532547810615352 var175

  EQ 85 a arg164

  ELT a161 arg226 a168

  EGT a131 1 var250

  NEQ a85 a a83

  AND var255 0x294a24f6 var189

  OR (| 2 | 0 | ( (), (42) ) |) arg168 var107

  NOT arg124 a

  TUPLE 5019186157739257888756115213149493826410

  ELEMENT arg148 var25 a219

  MAP_EMPTY a135

  MAP_LOOKUP a82 a a143

  MAP_LOOKUPD var112 arg35 a163 var112

  MAP_UPDATE false a0 a56 a

  MAP_DELETE arg180 a var1

  MAP_MEMBER a { true => 4} 94

  MAP_FROM_LIST () a159

  NIL arg91

  IS_NIL a121 var6

  CONS arg185 "foo" a114

  HD a150 var124

  TL arg223 a

  LENGTH var216 a143

  STR_EQ { 203961992615221001243597889146034217896 => 0x1f53a1843} 281217554184165828643225535776787296845 a177

  STR_JOIN a a 7144184027126178769820155907121270843348

  INT_TO_STR var238 a

  ADDR_TO_STR a arg216

  STR_REVERSE a174 @nv5B93FPzRHrGNmMdTDfGdd5xGZvep3MVSpJqzcQmMp59bBCv

  INT_TO_ADDR arg127 var207

  VARIANT a a 0x1f7b72200 a

  VARIANT_TEST a26 arg217 a

  VARIANT_ELEMENT a86 arg103 arg108

  BITS_NONEA

  BITS_NONE a

  BITS_ALLA

  BITS_ALL a164

  BITS_ALL_N a221 arg135

  BITS_SET arg150 a48 { 0x1a715e2a6 => 3}

  BITS_CLEAR arg98 a arg164

  BITS_TEST a a242 (| 5 | 2 | (1, "foo", ()) |)

  BITS_SUM a244 a71

  BITS_OR var20 var186 a

  BITS_AND a187 4 arg203

  BITS_DIFF var200 arg247 var20

  ADDRESS a237

  BALANCE a231

  ORIGIN arg216

  CALLER a27

  GASPRICE arg119

  BLOCKHASH arg110

  BENEFICIARY var163

  TIMESTAMP a

  GENERATION 242795038229506961431398379342231049652

  MICROBLOCK arg43

  DIFFICULTY var24

  GASLIMIT arg220

  GAS var35

  LOG0 a a85

  LOG1 arg94 arg86 arg208

  LOG2 a113 (| 5 | 2 | (1, "foo", ()) |) arg238 var108

  LOG3 arg255 arg15 arg211 var139 arg44

  LOG4 @nv5B93FPzRHrGNmMdTDfGdd5xGZvep3MVSpJqzcQmMp59bBCv a247 a 9 a38 a

  DEACTIVATE

  SPEND @nv5B93FPzRHrGNmMdTDfGdd5xGZvep3MVSpJqzcQmMp59bBCv var136

  ORACLE_REGISTER arg29 48 ((| 5 | 2 | (1, "foo", ()) |)) arg65 { <> => false} <>

  ORACLE_QUERY

  ORACLE_RESPOND

  ORACLE_EXTEND

  ORACLE_GET_ANSWER

  ORACLE_GET_QUESTION

  ORACLE_QUERY_FEE

  AENS_RESOLVE

  AENS_PRECLAIM

  AENS_CLAIM

  AENS_UPDATE

  AENS_TRANSFER

  AENS_REVOKE

  ECVERIFY

  SHA3

  SHA256

  BLAKE2B

  DUMMY7ARG a a 7607708484837907159893701471377343595877 (| 2 | 0 | ( [], [ 45, { 1 => 3441201581501946066216994494994943246334} ] ) |) a0 var56 "foo"

  DUMMY8ARG 3673679924816289365509492271980889822579 a69 arg242 var237 a175 arg106 () var255

  ABORT a

  EXIT var120

  NOP

  RETURNR ()
